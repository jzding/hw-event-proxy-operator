apiVersion: apps/v1
kind: Deployment
metadata:
  name: hw-event-proxy
  namespace: "{{ .Namespace }}"
  labels:
    app: hw-event-proxy
  annotations:
    release.openshift.io/version: "{{.ReleaseVersion}}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hw-event-proxy
  template:
    metadata:
      labels:
        app: hw-event-proxy
    spec:
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      serviceAccountName: hw-event-proxy-sa
      containers:
        - name: hw-event-proxy
          image: {{ .Image }}
          args:
            - "--api-port=9085"
          ports:
            - name: hw-event-port
              containerPort: 9087
          resources:
            requests:
              cpu: "10m"
            limits:
              cpu: "20m"
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: HW_EVENT_PROXY_SERVICE_SERVICE_PORT
              value: "9087"
            - name: MSG_PARSER_PORT
              value: "9097"
            - name: MSG_PARSER_TIMEOUT
              value: "{{ .MsgParserTimeOut }}"
            - name: REDFISH_USERNAME
              valueFrom:
                secretKeyRef:
                  name: redfish-basic-auth
                  key: username
            - name: REDFISH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redfish-basic-auth
                  key: password
            - name: REDFISH_HOSTADDR
              valueFrom:
                secretKeyRef:
                  name: redfish-basic-auth
                  key: hostaddr
            - name: LOG_LEVEL
              value: "{{ .LogLevel }}"
        - name: cloud-event-sidecar
          image: {{ .SideCar }}
          imagePullPolicy: IfNotPresent
          args:
            - "--metrics-addr=127.0.0.1:9091"
            - "--store-path=/store"
            - "--transport-host={{ .EventTransportHost }}"
            - "--api-port=9085"
          volumeMounts:
            - name: pubsubstore
              mountPath: /store
          ports:
            - name: metrics-port
              containerPort: 9091
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
        - name: kube-rbac-proxy
          image: {{ .KubeRbacProxy }}
          imagePullPolicy: IfNotPresent
          args:
            - --logtostderr
            - --secure-listen-address=:8443
            - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
            - --upstream=http://127.0.0.1:9091/
            - --tls-private-key-file=/etc/metrics/tls.key
            - --tls-cert-file=/etc/metrics/tls.crt
          ports:
            - containerPort: 8443
              name: https
          resources:
            requests:
              cpu: 10m
              memory: 20Mi
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - name: hw-event-proxy-certs
              mountPath: /etc/metrics
              readOnly: True
      volumes:
        - name: pubsubstore
          {{ if not (hasPrefix "amqp" .EventTransportHost) }}
          persistentVolumeClaim:
            claimName: cloud-event-proxy-store
          {{ else }}
          emptyDir: {}
          {{ end }}
        - name: hw-event-proxy-certs
          secret:
            secretName: hw-event-proxy-secret
{{ if not (hasPrefix "amqp" .EventTransportHost) }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: cloud-event-proxy-store
  namespace: "{{ .Namespace }}"
spec:
  # By default use the (default) storageClass.
  # Use the following command to patch a storageClass as default.
  # oc patch storageclass example-storage-class -p '{"metadata": {"annotations":{"storageclass.kubernetes.io/is-default-class":"true"}}}'
  # To use a specific storageClass, uncomment the following line and replace the place holder
  # with the name of storage class.
  # storageClassName: <storage-class-name>
  resources:
    requests:
      storage: 10Mi
  accessModes:
  - ReadWriteOnce
{{ end }}
